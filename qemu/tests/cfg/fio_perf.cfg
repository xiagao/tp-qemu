- fio_perf:
    no s390x
    type = fio_perf
    numa_node = -1
    image_aio = native
    block_size = "4k 16k 64k 256k"
    format = False
    iodepth = "1 8 64"
    threads = "16"
    rw = "read write randread randwrite randrw"
    pattern = ".*[read|write].*IOPS=(\d+(?:\.\d+)?[\w|\s]),\sBW=(\d+(?:\.\d+)?[\w|\s]*B/s)"
    Host_RHEL:
        kvm_ver_chk_cmd = "rpm -qa | grep -E 'qemu-kvm(-(rhev|ma|core))?-[0-9]+\.' | head -n 1"
    Linux:
        no ide
        order_list = "Block_size Iodepth Threads BW(MB/S) IOPS Latency(ms) Host_CPU BW/CPU KVM_Exits Util%"
        guest_ver_cmd = "uname -r"
        pre_cmd = "i=`/bin/ls /dev/[vs]db` && mkfs.xfs $i > /dev/null; partprobe; umount /mnt; mount $i /mnt"
        ppc64, ppc64le:
            virtio_blk:
                pre_cmd = "i=`/bin/ls /dev/vda` && mkfs.xfs $i > /dev/null; partprobe; umount /mnt; mount $i /mnt"
        drop_cache = "sync && echo 3 > /proc/sys/vm/drop_caches"
        guest_result_file = /var/tmp/fio_result
        fio_options = "--rw=%s --bs=%s --iodepth=%s --runtime=1m --direct=1 --filename=/mnt/%s --name=job1 --ioengine=libaio --thread --group_reporting --numjobs=%s --size=512MB --time_based --output=${guest_result_file} &> /dev/null"
    Windows:
        driver_verifier_query = "verifier /querysettings"
        verifier_clear_cmd = "verifier /reset"
        virtio_blk:
            guest_ver_cmd = wmic datafile where name="c:\\windows\\system32\\drivers\\viostor.sys"
        virtio_scsi:
            guest_ver_cmd = wmic datafile where name="c:\\windows\\system32\\drivers\\vioscsi.sys"
        order_list = "Block_size Iodepth Threads BW(MB/S) IOPS Latency(ms) Host_CPU BW/CPU KVM_Exits"
        pre_cmd = "echo select disk 1 > imDiskpart.script && echo create partition primary >> imDiskpart.script && echo assign letter=I >> imDiskpart.script&& echo exit >> imDiskpart.script && diskpart /s imDiskpart.script && format I: /FS:NTFS /V:local /Q /y"
        online_disk_cmd = "echo select disk %s > imDiskpart.script && echo online disk >> imDiskpart.script && echo attr disk clear readonly >> imDiskpart.script && echo exit >> imDiskpart.script && diskpart /s imDiskpart.script"
        guest_result_file = "C:\fio_result"
        fio_options = '--rw=%s --bs=%s --iodepth=%s --runtime=1m --direct=1 --filename=I\:%s --name=job1 --ioengine=windowsaio --thread --group_reporting --numjobs=%s --size=512MB --time_based --output=${guest_result_file}'
    variants:
        - file_system_block:
            image_size_disk1 = 40G
            force_create_image_disk1 = yes
            remove_image_disk1 = yes
            format = True
            variants:
                - localfs:
                    #You can specify your own directory which data disk is in. In our actual test, the /mnt is mounted on a ssd.
                    image_name_disk1 = /mnt/storage2
                    Linux:
                        vhost_nic1 =
                - nfs_block:
                    image_name_disk1 = images/storage2
        - raw_disk:
            no ppc64,ppc64le
            image_raw_device_disk1 = yes
            vhost_nic1 =
            remove_image = no
            Linux:
                virtio_blk:
                    fio_options = "--rw=%s --bs=%s --iodepth=%s --runtime=1m --direct=1 --filename=/dev/vdb --name=job1 --ioengine=libaio --thread --group_reporting --numjobs=%s --time_based --output=${guest_result_file} &> /dev/null"
                virtio_scsi:
                    fio_options = "--rw=%s --bs=%s --iodepth=%s --runtime=1m --direct=1 --filename=/dev/sdb --name=job1 --ioengine=libaio --thread --group_reporting --numjobs=%s --time_based --output=${guest_result_file} &> /dev/null"
            Windows:
                fio_options = '--rw=%s --bs=%s --iodepth=%s --runtime=1m --direct=1 --filename=\\.\PHYSICALDRIVE1 --name=job1 --ioengine=windowsaio --thread --group_reporting --numjobs=%s --size=512MB --time_based --output=${guest_result_file}'
            variants:
                - fusion-io:
                    #Pls specify your own fusion-io ssd in the host.
                    image_name_disk1 = /dev/fioa
                - NVMe:
                    #Pls specify your own NVMe disk in the host.
                    image_name_disk1 = /dev/nvme0n1
        - virtio_fs_perf:
            no Windows
            no RHEL.6 RHEL.7 RHEL.8.0 RHEL.8.1
            no Host_RHEL.m6 Host_RHEL.m7 Host_RHEL.m8.u0 Host_RHEL.m8.u1
            required_qemu = [4.2.0,)
            filesystems = fs
            fs_driver = virtio-fs
            fs_source_type = mount
            fs_source_dir = /mnt/test/virtio_fs_test/
            force_create_fs_source = yes
            remove_fs_source = yes
            fs_target = 'myfs'
            fs_driver_props = {"queue-size": 1024}
            mem = 32G
            mem_devs = mem1
            backend_mem_mem1 = memory-backend-file
            mem-path_mem1 = /dev/shm
            size_mem1 = 32G
            use_mem_mem1 = no
            share_mem = yes
            guest_numa_nodes = shm0
            numa_memdev_shm0 = mem-mem1
            numa_nodeid_shm0 = 0
            fs_dest = '/mnt/${fs_target}'
            fio_options = "--rw=%s --bs=%s --iodepth=%s --runtime=1m --direct=1 --filename=${fs_dest}/%s --name=job1 --ioengine=libaio --thread --group_reporting --numjobs=%s --size=512MB --time_based --output=${guest_result_file} &> /dev/null"
            order_list = "Block_size Iodepth Threads BW(MB/S) IOPS Latency(ms) Host_CPU BW/CPU KVM_Exits"
            fs_binary_extra_options = " --thread-pool-size=32"
            !Host_RHEL.m8:
                # The below option isn't supported on RHEL8.
                fs_binary_extra_options += " --allow-direct-io"
                vfsd_ver_chk_cmd = "rpm -q virtiofsd"
            variants:
                - auto:
                    fs_binary_extra_options += " -o cache=auto"
                - always:
                    fs_binary_extra_options += " -o cache=always"
                - none:
                    fs_binary_extra_options += " -o cache=none"
    variants:
        - single_disk:
            no virtio_fs_perf
            images += " disk1"
            num_disk = "1"
        - shared_fs:
            only virtio_fs_perf
